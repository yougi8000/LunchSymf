security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory:  
            memory: 
                users:
                    yougi8000:
                    password: '$2y$13$Yyp3XJkIoqRFh10iP4l.EuIB.PzbXEZSeu1MJdNVJACMEQrd8t1yS'
                    roles : 'ROLE_ADMIN'
                    #yougi8000@gmail.com: { password : '$2y$13$Yyp3XJkIoqRFh10iP4l.EuIB.PzbXEZSeu1MJdNVJACMEQrd8t1yS', roles : ['ROLE_ADMIN'] }
                    #yougi8000: { password : '$2y$13$Yyp3XJkIoqRFh10iP4l.EuIB.PzbXEZSeu1MJdNVJACMEQrd8t1yS', roles : ['ROLE_ADMIN'] }
        in_database:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            # provider: users_in_memory
            provider: in_database

            form_login:
                login_path: security_login
                check_path: security_login


            logout:
                path: security_logout
                target: restaurant
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
